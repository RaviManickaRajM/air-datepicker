using System;
using System.Data.SqlClient;

class Program
{
    static void Main()
    {
        string sourceConnectionString = "Your_Source_DB_Connection_String";
        string destinationConnectionString = "Your_Destination_DB_Connection_String";

        using (SqlConnection sourceConnection = new SqlConnection(sourceConnectionString))
        using (SqlConnection destinationConnection = new SqlConnection(destinationConnectionString))
        {
            sourceConnection.Open();
            destinationConnection.Open();

            // Begin a transaction
            SqlTransaction transaction = destinationConnection.BeginTransaction();

            try
            {
                // Step 1: Select records from source DB
                string selectQuery = "SELECT id1 FROM db1.dbo.Table1";
                SqlCommand selectCommand = new SqlCommand(selectQuery, sourceConnection);
                SqlDataReader reader = selectCommand.ExecuteReader();

                while (reader.Read())
                {
                    int id1 = reader.GetInt32(0);

                    // Step 2: Insert records into destination DB
                    string insertQuery = "INSERT INTO db2.dbo.Table1 (id1) VALUES (@id1); SELECT SCOPE_IDENTITY();";
                    SqlCommand insertCommand = new SqlCommand(insertQuery, destinationConnection, transaction);
                    insertCommand.Parameters.AddWithValue("@id1", id1);
                    int newId1 = Convert.ToInt32(insertCommand.ExecuteScalar());

                    // Step 3: Insert foreign key into table 2
                    string insertForeignKeyQuery = "INSERT INTO db2.dbo.Table2 (id1_fk) VALUES (@newId1)";
                    SqlCommand insertForeignKeyCommand = new SqlCommand(insertForeignKeyQuery, destinationConnection, transaction);
                    insertForeignKeyCommand.Parameters.AddWithValue("@newId1", newId1);
                    insertForeignKeyCommand.ExecuteNonQuery();
                }

                // Commit the transaction if everything succeeded
                transaction.Commit();
                Console.WriteLine("Transaction committed: Records transferred successfully.");
            }
            catch (Exception ex)
            {
                // Rollback the transaction if an exception occurs
                Console.WriteLine("Transaction rolled back: " + ex.Message);
                transaction.Rollback();
            }
        }
    }
}
